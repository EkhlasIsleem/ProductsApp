@model Product.DataAccess.ViewModel.CategoryVM

<div class="row">
    <h4 class="col-sm-10"> All Categories</h4>
    <a href="/Categories/_Create" class="btn btn-sm btn-outline-primary openModal" ajaxType="GET">
        Add Category
    </a>

    <div class="col-4">
        <div class="kt-input-icon kt-input-icon--left">
            <input type="text" class="form-control  clear-search-input" placeholder="Search..." oninput="refresh();" id="generalSearch">
            <span class="kt-input-icon__icon kt-input-icon__icon--left">
                <span><i class="la la-search"></i></span>
            </span>
        </div>
    </div>
</div>
<br />
<div id="categoryGrid" style="width: 100%;height: 100%;" class="ag-theme-balham firefox-scroll-fixed"></div>

<script>

    var columnDefs = [
        { headerName: "Id", field: "id" },
        {
            headerName: "Name", field: "name"
        },
        {
            headerName: "Description", field: "description"
        },
        {
            headerName: 'Action', editable: false, suppressSizeToFit: true,
            cellRenderer: function (params) {
                if (params.data) {
                    return `<a href="/Categories/_Edit/${params.data.id}" ajaxType="GET" class="btn btn-sm btn-outline-primary openModal">Edit</a>&nbsp;
                        <a href="/Categories/Delete/${params.data.id}" ajaxType="GET" confirmButtonText="Yes, Cancel it!" msgHeader="Canceled!"  class="btn btn-sm btn-outline-danger btnDelete confirm">Delete</a>&nbsp;
                       <a href="/Categories/_Details/${params.data.id}"  ajaxType="GET"  class="btn btn-sm btn-outline-success openModal">Details</a>`;
                }
            }

        }
    ];

    var gridOptions = {
        columnDefs: columnDefs,
        rowSelection: 'multiple',
        domLayout: 'autoHeight',

        defaultColDef: {
            editable: false,
            enableRowGroup: true,
            enablePivot: true,
            enableValue: true,
            sortable: true,
            resizable: true,
            filter: true,
            flex: 1
        },
        suppressRowClickSelection: true,
        pagination: true,
        getRowHeight: function (params) {
            return 35;
        },
        rowModelType: 'infinite',
       // animateRows: true,
        paginationPageSize: 3,
        cacheOverflowSize: 2,
      // maxConcurrentDatasourceRequests: 2,
       // infiniteInitialRowCount: 1,
        maxBlocksInCache: 2,
        cacheBlockSize: 3,
        enableColResize: true,
       // suppressMenuHide: true,
       
    };
    var dataSourceTest = '';
    document.addEventListener('DOMContentLoaded', function () {
        var gridDiv = document.querySelector('#categoryGrid');
        new agGrid.Grid(gridDiv, gridOptions);

        dataSourceTest = {
            //  rowCount: null, // behave as infinite scroll
            getRows: function (params) {
                var model = {
                    PageNo: gridOptions.api.paginationGetCurrentPage(),
                    PageSize: gridOptions.paginationPageSize,
                    SearchText: document.getElementById('generalSearch').value,

                };
                loadPaginatedGridWithDelay('/Categories/IndexAjax/', 'POST', model, gridOptions, params);
            },
            getRowHeight: function (params) {
                return 35;
            },
        };
        gridOptions.api.showNoRowsOverlay();
        gridOptions.api.setDatasource(dataSourceTest);
    });


    function refresh(e) {
        gridOptions.api.setDatasource(dataSourceTest);
    }
</script>

