@inject Product.DataAccess.Repositories.ICategoryRepository _category;
@inject Product.DataAccess.Repositories.IProductRepository _product;
@{
    var products =await _product.GetAllAsync();
    var categories =await _category.GetAllAsync();

}
<li class="mega-position nav-item dropdown text-white-50">
    <a class="nav-link dropdown-toggle" href="#" id="navbarDropDowmMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Product Managment
    </a>
    <div class="dropdown-menu col-lg-8 sub-menu-segment-border">
        @foreach (var category in categories)
        {
            <div class="col-lg-3">
                <ul class="multi-column-dropdown">
                    <li class="active has-sub menu-title uppercase">
                        <a href="#"><span>@category.Name</span></a>
                        <ul>
                            @foreach (var product in products.Where(x => category.Id == x.CategoryId))
                            {
                                <li class="has-sub"><a href="/Product/Details/@product.Id"><span>@product.Name</span></a></li>

                            }
                        </ul>

                    </li>
                </ul>
            </div>
        }
    </div>
</li>
@* </div>
    </div>
    </div>

    </div>
    </div>
    </li>
*@ 